# RUN: choco-opt %s | filecheck %s

def f(x: int) -> [int]:
  return [x, x+1]

# CHECK:builtin.module {
# CHECK-NEXT:  "choco.ast.program"() ({
# CHECK-NEXT:    "choco.ast.func_def"() <{"func_name" = "f"}> ({
# CHECK-NEXT:      "choco.ast.typed_var"() <{"var_name" = "x"}> ({
# CHECK-NEXT:        "choco.ast.type_name"() <{"type_name" = "int"}> : () -> ()
# CHECK-NEXT:      }) : () -> ()
# CHECK-NEXT:    }, {
# CHECK-NEXT:      "choco.ast.list_type"() ({
# CHECK-NEXT:        "choco.ast.type_name"() <{"type_name" = "int"}> : () -> ()
# CHECK-NEXT:      }) : () -> ()
# CHECK-NEXT:    }, {
# CHECK-NEXT:      "choco.ast.return"() ({
# CHECK-NEXT:        "choco.ast.list_expr"() ({
# CHECK-NEXT:          "choco.ast.id_expr"() <{"id" = "x"}> : () -> ()
# CHECK-NEXT:          "choco.ast.binary_expr"() <{"op" = "+"}> ({
# CHECK-NEXT:            "choco.ast.id_expr"() <{"id" = "x"}> : () -> ()
# CHECK-NEXT:          }, {
# CHECK-NEXT:            "choco.ast.literal"() <{"value" = 1 : i32}> : () -> ()
# CHECK-NEXT:          }) : () -> ()
# CHECK-NEXT:        }) : () -> ()
# CHECK-NEXT:      }) : () -> ()
# CHECK-NEXT:    }) : () -> ()
# CHECK-NEXT:  }, {
# CHECK-NEXT:  ^0:
# CHECK-NEXT:  }) : () -> ()
# CHECK-NEXT:}
